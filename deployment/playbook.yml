- hosts: all
  become: true
  tasks:
    - name: Install required system packages
      apt:
        state: latest
        update_cache: yes
        name:
          - curl
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - python3-pip
          - python3-setuptools

    - name: Add Docker GPG apt Key
      apt_key:
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable

    - name: Update apt and install docker-ce
      apt:
        update_cache: yes
        name: docker-ce
        state: latest

    - name: Copy docker configuration
      # We want to limit the size of Docker's logfiles, that's done with the
      # daemon.json and requires a restart of the process (not done automatically)
      copy:
        src: common/daemon.json
        dest: /etc/docker/daemon.json

    - name: Install Docker module for Python
      pip:
        name:
          - docker

    - name: Make sure docker is running
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Copy sysctl configuration
      # Recommended setting for Elasticsearch containers, but also
      # useful for all other Docker machines/containers
      copy:
        src: common/01-max_mem_count.conf
        dest: /etc/sysctl.d/01-max_mem_count.conf

    - name: Provide custom nginx configuration on machine
      copy:
        src: nginx/
        dest: /etc/nginx/

    - name: Create the app config directory
      file:
        path: /etc/spritstat
        state: directory
    - name: Provide app environment on machine
      copy:
        decrypt: yes
        src: spritstat/production.env
        dest: /etc/spritstat/production.env

    - name: Create container network
      docker_network:
        name: spritstat

    - name: Run application
      docker_container:
        name: spritstat
        image: ghcr.io/tgamauf/spritstat:latest
        pull: yes
        state: started
        restart: yes
        restart_policy: always
        volumes:
          - staticfiles:/home/app/web/staticfiles
        networks:
          - name: spritstat
        networks_cli_compatible: yes
        env_file: /etc/spritstat/production.env

    - name: Run nginx-proxy
      # This nginx container uses autoconfiguration to map domain names
      # to the outside world.
      docker_container:
        name: nginx-proxy
        image: nginxproxy/nginx-proxy:alpine
        pull: yes
        state: started
        restart: yes
        restart_policy: always
        volumes:
          - certs:/etc/nginx/certs
          - html:/usr/share/nginx/html
          - staticfiles:/home/app/web/staticfiles:ro
          - /etc/nginx/vhost.d:/etc/nginx/vhost.d
          - /var/run/docker.sock:/tmp/docker.sock:ro
        networks:
          - name: spritstat
        networks_cli_compatible: yes
        ports:
          - 80:80
          - 443:443

    - name: Run the nginx-companion
      # Automatically configures Letsencrypt certificates for all hosts that
      # want/need it. Will also refresh the certificates when necessary.
      docker_container:
        image: nginxproxy/acme-companion:latest
        name: nginx-proxy-acme
        pull: yes
        state: started
        restart: yes
        restart_policy: always
        env:
          DEFAULT_EMAIL: "tl@gkcs.eu"
        volumes_from:
          - nginx-proxy
        volumes:
          - acme:/etc/acme.sh
          - /var/run/docker.sock:/var/run/docker.sock:ro
        networks:
          - name: spritstat
        networks_cli_compatible: yes

    - name: Remove all but selected list of containers
      docker_network:
        name: spritstat
        connected:
          - spritstat
          - nginx-proxy
          - nginx-proxy-acme

    - name: Prune Docker leftovers
      docker_prune:
        containers: yes
        images: yes
        networks: yes
        volumes: yes
